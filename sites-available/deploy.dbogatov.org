server {
    server_name deploy.dbogatov.org;
    
    include /etc/nginx/snippets/http_redirect.conf;
}
    
server {
    server_name deploy.dbogatov.org;

    ssl_certificate /etc/letsencrypt/live/deploy.dbogatov.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/deploy.dbogatov.org/privkey.pem;

    include /etc/nginx/snippets/ssl_config.conf;
    
    include /etc/nginx/snippets/letsencrypt.conf;
    
    location /deploy {

        client_max_body_size 50k;
        client_body_buffer_size 50k;

        content_by_lua_block {
            ngx.req.read_body()  -- explicitly read the req body
            local args, err = ngx.req.get_post_args()
            local data = ngx.req.get_body_data()

            local token = ""
            local project = ""
            local path = ""
            
            if data then
             for key, val in pairs(args) do
              if key == "token" then
               token = val
              elseif key == "project" then
               project = val
              end
             end
             ngx.say("Request deployement for project: ", project)

             if token == "SomeSecret" then

              if project == "CV-Website" then
               path = "/var/static/CV-Website/.deploy.sh"
              elseif project == "DashaWebsite" then
               path = "/var/static/dashawebsite/.deploy.sh"
              elseif project == "VisaSupport" then
               path = "/var/static/Visa-Support/.deploy.sh"
              elseif project == "SocialImps" then
               path = "/root/CS-3043-Group-Project/Website/.deploy.sh"
              end

              if project == "" then
               ngx.say("No such project (", project, ")")
              else
               ngx.say("Executing ", path)
               os.execute(path)
               ngx.say("Execution completed")
              end

             else
              ngx.say("Invalid token")
             end
            end

        }
    
    }
}
